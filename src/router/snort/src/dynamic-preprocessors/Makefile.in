# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@FEAT_OPEN_APPID_TRUE@@SO_WITH_STATIC_LIB_TRUE@am__append_1 = include/appId.h include/appIdApi.h include/thirdparty_appid_types.h \
@FEAT_OPEN_APPID_TRUE@@SO_WITH_STATIC_LIB_TRUE@						  include/thirdparty_appid_api.h include/dns_defs.h


#appdata_adjuster
@BUILD_SNORT_RELOAD_TRUE@@SO_WITH_STATIC_LIB_TRUE@am__append_2 = include/appdata_adjuster.c include/sfxhash.c include/sfhashfcn.c include/sfmemcap.c include/sfprimetable.c include/reg_test.h include/reg_test.c
@BUILD_SNORT_RELOAD_TRUE@@SO_WITH_STATIC_LIB_TRUE@am__append_3 = include/appdata_adjuster.h
@FEAT_OPEN_APPID_TRUE@am__append_4 = include/appId.h  include/appIdApi.h include/thirdparty_appid_types.h \
@FEAT_OPEN_APPID_TRUE@				 include/thirdparty_appid_api.h \
@FEAT_OPEN_APPID_TRUE@				 include/sfprimetable.h include/sfprimetable.c include/sfxhash.h \
@FEAT_OPEN_APPID_TRUE@				 include/sfxhash.c \
@FEAT_OPEN_APPID_TRUE@				 include/sfghash.c include/sfhashfcn.c include/sflsq.h include/sflsq.c \
@FEAT_OPEN_APPID_TRUE@				 include/md5.h include/md5.c \
@FEAT_OPEN_APPID_TRUE@				 include/dns_defs.h

@BUILD_SNORT_RELOAD_TRUE@am__append_5 = include/sfprimetable.h \
@BUILD_SNORT_RELOAD_TRUE@        include/sfprimetable.c \
@BUILD_SNORT_RELOAD_TRUE@        include/sfmemcap.h \
@BUILD_SNORT_RELOAD_TRUE@        include/sfmemcap.c \
@BUILD_SNORT_RELOAD_TRUE@        include/sfhashfcn.h \
@BUILD_SNORT_RELOAD_TRUE@        include/sfhashfcn.c \
@BUILD_SNORT_RELOAD_TRUE@        include/sfxhash.h \
@BUILD_SNORT_RELOAD_TRUE@        include/sfxhash.c \
@BUILD_SNORT_RELOAD_TRUE@        include/appdata_adjuster.h \
@BUILD_SNORT_RELOAD_TRUE@        include/appdata_adjuster.c

@FEAT_OPEN_APPID_TRUE@am__append_6 = appid
@FEAT_OPEN_APPID_TRUE@am__append_7 = include/appId.h include/appIdApi.h include/thirdparty_appid_types.h \
@FEAT_OPEN_APPID_TRUE@				  include/thirdparty_appid_api.h \
@FEAT_OPEN_APPID_TRUE@				  include/sfprimetable.h include/sfxhash.h include/sfhashfcn.h \
@FEAT_OPEN_APPID_TRUE@				  include/md5.h \
@FEAT_OPEN_APPID_TRUE@				  include/dns_defs.h

@BUILD_SNORT_RELOAD_TRUE@am__append_8 = include/sfprimetable.h \
@BUILD_SNORT_RELOAD_TRUE@include/sfprimetable.c \
@BUILD_SNORT_RELOAD_TRUE@include/sfmemcap.h \
@BUILD_SNORT_RELOAD_TRUE@include/sfmemcap.c \
@BUILD_SNORT_RELOAD_TRUE@include/sfhashfcn.h \
@BUILD_SNORT_RELOAD_TRUE@include/sfhashfcn.c \
@BUILD_SNORT_RELOAD_TRUE@include/sfxhash.h \
@BUILD_SNORT_RELOAD_TRUE@include/sfxhash.c \
@BUILD_SNORT_RELOAD_TRUE@include/appdata_adjuster.h \
@BUILD_SNORT_RELOAD_TRUE@include/appdata_adjuster.c

subdir = src/dynamic-preprocessors
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__preproc_HEADERS_DIST) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(preproclibdir)" \
	"$(DESTDIR)$(preprocdir)" "$(DESTDIR)$(preprocdir)"
LTLIBRARIES = $(preproclib_LTLIBRARIES)
libsf_dynamic_preproc_la_LIBADD =
am__libsf_dynamic_preproc_la_SOURCES_DIST = ssl_common/ssl.c \
	ssl_common/ssl_config.c ssl_common/ssl_inspect.c \
	ssl_common/ssl_ha.c
@SO_WITH_STATIC_LIB_TRUE@am_libsf_dynamic_preproc_la_OBJECTS =  \
@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_preproc_la-ssl.lo \
@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_preproc_la-ssl_config.lo \
@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_preproc_la-ssl_inspect.lo \
@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_preproc_la-ssl_ha.lo
@SO_WITH_STATIC_LIB_TRUE@nodist_libsf_dynamic_preproc_la_OBJECTS = libsf_dynamic_preproc_la-sf_dynamic_preproc_lib.lo \
@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_preproc_la-sf_ip.lo \
@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_preproc_la-sfrt.lo \
@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_preproc_la-sfrt_dir.lo \
@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_preproc_la-sfrt_flat.lo \
@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_preproc_la-sfrt_flat_dir.lo \
@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_preproc_la-segment_mem.lo \
@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_preproc_la-mempool.lo \
@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_preproc_la-sf_sdlist.lo \
@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_preproc_la-sfPolicyUserData.lo \
@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_preproc_la-util_unfold.lo \
@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_preproc_la-sf_base64decode.lo \
@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_preproc_la-sf_email_attach_decode.lo \
@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_preproc_la-reg_test.lo \
@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_preproc_la-sfparser.lo
libsf_dynamic_preproc_la_OBJECTS =  \
	$(am_libsf_dynamic_preproc_la_OBJECTS) \
	$(nodist_libsf_dynamic_preproc_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libsf_dynamic_preproc_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libsf_dynamic_preproc_la_CFLAGS) $(CFLAGS) \
	$(libsf_dynamic_preproc_la_LDFLAGS) $(LDFLAGS) -o $@
@SO_WITH_STATIC_LIB_TRUE@am_libsf_dynamic_preproc_la_rpath = -rpath \
@SO_WITH_STATIC_LIB_TRUE@	$(preproclibdir)
libsf_dynamic_utils_la_LIBADD =
@BUILD_SNORT_RELOAD_TRUE@@SO_WITH_STATIC_LIB_TRUE@am__objects_1 = libsf_dynamic_utils_la-appdata_adjuster.lo \
@BUILD_SNORT_RELOAD_TRUE@@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_utils_la-sfxhash.lo \
@BUILD_SNORT_RELOAD_TRUE@@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_utils_la-sfhashfcn.lo \
@BUILD_SNORT_RELOAD_TRUE@@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_utils_la-sfmemcap.lo \
@BUILD_SNORT_RELOAD_TRUE@@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_utils_la-sfprimetable.lo \
@BUILD_SNORT_RELOAD_TRUE@@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_utils_la-reg_test.lo
@FEAT_OPEN_APPID_FALSE@@SO_WITH_STATIC_LIB_TRUE@nodist_libsf_dynamic_utils_la_OBJECTS = libsf_dynamic_utils_la-sfmemcap.lo \
@FEAT_OPEN_APPID_FALSE@@SO_WITH_STATIC_LIB_TRUE@	$(am__objects_1)
@FEAT_OPEN_APPID_TRUE@@SO_WITH_STATIC_LIB_TRUE@nodist_libsf_dynamic_utils_la_OBJECTS = libsf_dynamic_utils_la-sfprimetable.lo \
@FEAT_OPEN_APPID_TRUE@@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_utils_la-sfxhash.lo \
@FEAT_OPEN_APPID_TRUE@@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_utils_la-sfmemcap.lo \
@FEAT_OPEN_APPID_TRUE@@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_utils_la-sfghash.lo \
@FEAT_OPEN_APPID_TRUE@@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_utils_la-sfhashfcn.lo \
@FEAT_OPEN_APPID_TRUE@@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_utils_la-sflsq.lo \
@FEAT_OPEN_APPID_TRUE@@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_utils_la-md5.lo \
@FEAT_OPEN_APPID_TRUE@@SO_WITH_STATIC_LIB_TRUE@	$(am__objects_1)
libsf_dynamic_utils_la_OBJECTS =  \
	$(nodist_libsf_dynamic_utils_la_OBJECTS)
libsf_dynamic_utils_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libsf_dynamic_utils_la_CFLAGS) $(CFLAGS) \
	$(libsf_dynamic_utils_la_LDFLAGS) $(LDFLAGS) -o $@
@SO_WITH_STATIC_LIB_TRUE@am_libsf_dynamic_utils_la_rpath = -rpath \
@SO_WITH_STATIC_LIB_TRUE@	$(preproclibdir)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp =
am__maybe_remake_depfiles =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libsf_dynamic_preproc_la_SOURCES) \
	$(nodist_libsf_dynamic_preproc_la_SOURCES) \
	$(nodist_libsf_dynamic_utils_la_SOURCES)
DIST_SOURCES = $(am__libsf_dynamic_preproc_la_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__preproc_HEADERS_DIST = ssl_common/ssl.h ssl_common/ssl_include.h \
	ssl_common/ssl_session.h ssl_common/ssl_config.h \
	ssl_common/ssl_ha.h ssl_common/ssl_inspect.h
HEADERS = $(nodist_preproc_HEADERS) $(preproc_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = . libs ftptelnet pop imap smtp ssh dns ssl dcerpc2 sdf \
	sip reputation gtp modbus dnp3 s7commplus file appid
am__DIST_COMMON = $(srcdir)/Makefile.in
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CCONFIGFLAGS = @CCONFIGFLAGS@
CFLAGS = @CFLAGS@
CONFIGFLAGS = @CONFIGFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
ICONFIGFLAGS = @ICONFIGFLAGS@
INCLUDES = -I${top_builddir}/src/dynamic-preprocessors/include -I${top_builddir}/src/dynamic-preprocessors/ssl_common -I${top_srcdir}/src/dynamic-preprocessors/libs -I${top_builddir}
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
LUA_CFLAGS = @LUA_CFLAGS@
LUA_LIBS = @LUA_LIBS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SIGNAL_SNORT_DUMP_STATS = @SIGNAL_SNORT_DUMP_STATS@
SIGNAL_SNORT_READ_ATTR_TBL = @SIGNAL_SNORT_READ_ATTR_TBL@
SIGNAL_SNORT_RELOAD = @SIGNAL_SNORT_RELOAD@
SIGNAL_SNORT_ROTATE_STATS = @SIGNAL_SNORT_ROTATE_STATS@
STRIP = @STRIP@
VERSION = @VERSION@
XCCFLAGS = @XCCFLAGS@
YACC = @YACC@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
extra_incl = @extra_incl@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
luajit_CFLAGS = @luajit_CFLAGS@
luajit_LIBS = @luajit_LIBS@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = foreign no-dependencies
@SO_WITH_STATIC_LIB_TRUE@preproclibdir = $(pkglibdir)/dynamic_preproc
@SO_WITH_STATIC_LIB_TRUE@preproclib_LTLIBRARIES =  \
@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_preproc.la \
@SO_WITH_STATIC_LIB_TRUE@	libsf_dynamic_utils.la
@SO_WITH_STATIC_LIB_TRUE@libsf_dynamic_preproc_la_CFLAGS = -fPIC -DPIC -DDYNAMIC_PREPROC_CONTEXT
@SO_WITH_STATIC_LIB_TRUE@libsf_dynamic_preproc_la_LDFLAGS = -static
@SO_WITH_STATIC_LIB_TRUE@libsf_dynamic_preproc_la_SOURCES = \
@SO_WITH_STATIC_LIB_TRUE@ssl_common/ssl.c \
@SO_WITH_STATIC_LIB_TRUE@ssl_common/ssl_config.c \
@SO_WITH_STATIC_LIB_TRUE@ssl_common/ssl_inspect.c \
@SO_WITH_STATIC_LIB_TRUE@ssl_common/ssl_ha.c 

@SO_WITH_STATIC_LIB_TRUE@nodist_libsf_dynamic_preproc_la_SOURCES = \
@SO_WITH_STATIC_LIB_TRUE@include/sf_dynamic_preproc_lib.c \
@SO_WITH_STATIC_LIB_TRUE@include/sf_ip.c \
@SO_WITH_STATIC_LIB_TRUE@include/sfrt.c \
@SO_WITH_STATIC_LIB_TRUE@include/sfrt_dir.c \
@SO_WITH_STATIC_LIB_TRUE@include/sfrt_flat.c \
@SO_WITH_STATIC_LIB_TRUE@include/sfrt_flat_dir.c \
@SO_WITH_STATIC_LIB_TRUE@include/segment_mem.c \
@SO_WITH_STATIC_LIB_TRUE@include/mempool.c \
@SO_WITH_STATIC_LIB_TRUE@include/sf_sdlist.c \
@SO_WITH_STATIC_LIB_TRUE@include/sfPolicyUserData.c \
@SO_WITH_STATIC_LIB_TRUE@include/util_unfold.c \
@SO_WITH_STATIC_LIB_TRUE@include/sf_base64decode.c \
@SO_WITH_STATIC_LIB_TRUE@include/sf_email_attach_decode.c \
@SO_WITH_STATIC_LIB_TRUE@include/reg_test.c \
@SO_WITH_STATIC_LIB_TRUE@libs/sfparser.c

@SO_WITH_STATIC_LIB_TRUE@preprocdir = $(pkgincludedir)/dynamic_preproc
@SO_WITH_STATIC_LIB_TRUE@preproc_HEADERS = \
@SO_WITH_STATIC_LIB_TRUE@ssl_common/ssl.h \
@SO_WITH_STATIC_LIB_TRUE@ssl_common/ssl_include.h \
@SO_WITH_STATIC_LIB_TRUE@ssl_common/ssl_session.h \
@SO_WITH_STATIC_LIB_TRUE@ssl_common/ssl_config.h \
@SO_WITH_STATIC_LIB_TRUE@ssl_common/ssl_ha.h \
@SO_WITH_STATIC_LIB_TRUE@ssl_common/ssl_inspect.h

@SO_WITH_STATIC_LIB_TRUE@nodist_preproc_HEADERS = libs/sfcommon.h \
@SO_WITH_STATIC_LIB_TRUE@	libs/sf_preproc_info.h \
@SO_WITH_STATIC_LIB_TRUE@	include/sf_snort_packet.h \
@SO_WITH_STATIC_LIB_TRUE@	include/sf_protocols.h \
@SO_WITH_STATIC_LIB_TRUE@	include/sf_snort_plugin_api.h \
@SO_WITH_STATIC_LIB_TRUE@	include/sf_decompression.h \
@SO_WITH_STATIC_LIB_TRUE@	include/sf_decompression_define.h \
@SO_WITH_STATIC_LIB_TRUE@	include/sfPolicyUserData.h \
@SO_WITH_STATIC_LIB_TRUE@	include/snort_debug.h \
@SO_WITH_STATIC_LIB_TRUE@	include/snort_bounds.h \
@SO_WITH_STATIC_LIB_TRUE@	include/cpuclock.h include/profiler.h \
@SO_WITH_STATIC_LIB_TRUE@	include/bitop.h include/mempool.h \
@SO_WITH_STATIC_LIB_TRUE@	include/sf_sdlist_types.h \
@SO_WITH_STATIC_LIB_TRUE@	include/sf_ip.h include/sfrt_flat.h \
@SO_WITH_STATIC_LIB_TRUE@	include/sfrt_flat_dir.h \
@SO_WITH_STATIC_LIB_TRUE@	include/segment_mem.h \
@SO_WITH_STATIC_LIB_TRUE@	include/sf_dynamic_common.h \
@SO_WITH_STATIC_LIB_TRUE@	include/sf_dynamic_engine.h \
@SO_WITH_STATIC_LIB_TRUE@	include/sf_dynamic_define.h \
@SO_WITH_STATIC_LIB_TRUE@	include/sf_dynamic_meta.h \
@SO_WITH_STATIC_LIB_TRUE@	include/sf_dynamic_preprocessor.h \
@SO_WITH_STATIC_LIB_TRUE@	include/sf_dynamic_preproc_lib.h \
@SO_WITH_STATIC_LIB_TRUE@	include/ipv6_port.h \
@SO_WITH_STATIC_LIB_TRUE@	include/sfPolicy.h include/sfrt.h \
@SO_WITH_STATIC_LIB_TRUE@	include/sfrt_dir.h \
@SO_WITH_STATIC_LIB_TRUE@	include/sfrt_trie.h \
@SO_WITH_STATIC_LIB_TRUE@	include/obfuscation.h \
@SO_WITH_STATIC_LIB_TRUE@	include/packet_time.h \
@SO_WITH_STATIC_LIB_TRUE@	include/session_api.h \
@SO_WITH_STATIC_LIB_TRUE@	include/stream_api.h \
@SO_WITH_STATIC_LIB_TRUE@	include/str_search.h \
@SO_WITH_STATIC_LIB_TRUE@	include/preprocids.h \
@SO_WITH_STATIC_LIB_TRUE@	include/sfcontrol.h \
@SO_WITH_STATIC_LIB_TRUE@	include/sidechannel_define.h \
@SO_WITH_STATIC_LIB_TRUE@	include/idle_processing.h \
@SO_WITH_STATIC_LIB_TRUE@	include/sf_seqnums.h \
@SO_WITH_STATIC_LIB_TRUE@	include/perf_indicators.h \
@SO_WITH_STATIC_LIB_TRUE@	include/mpse_methods.h \
@SO_WITH_STATIC_LIB_TRUE@	include/file_api.h \
@SO_WITH_STATIC_LIB_TRUE@	include/reload_api.h \
@SO_WITH_STATIC_LIB_TRUE@	include/smtp_api.h include/reg_test.h \
@SO_WITH_STATIC_LIB_TRUE@	include/memory_stats.h \
@SO_WITH_STATIC_LIB_TRUE@	$(am__append_1) $(am__append_3)
@SO_WITH_STATIC_LIB_TRUE@libsf_dynamic_utils_la_CFLAGS = -fPIC -DPIC -DDYNAMIC_PREPROC_CONTEXT
@SO_WITH_STATIC_LIB_TRUE@libsf_dynamic_utils_la_LDFLAGS = -static
@FEAT_OPEN_APPID_FALSE@@SO_WITH_STATIC_LIB_TRUE@nodist_libsf_dynamic_utils_la_SOURCES = include/sfmemcap.c \
@FEAT_OPEN_APPID_FALSE@@SO_WITH_STATIC_LIB_TRUE@	include/sfmemcap.h \
@FEAT_OPEN_APPID_FALSE@@SO_WITH_STATIC_LIB_TRUE@	$(am__append_2)
@FEAT_OPEN_APPID_TRUE@@SO_WITH_STATIC_LIB_TRUE@nodist_libsf_dynamic_utils_la_SOURCES = include/sfprimetable.c \
@FEAT_OPEN_APPID_TRUE@@SO_WITH_STATIC_LIB_TRUE@	include/sfxhash.c \
@FEAT_OPEN_APPID_TRUE@@SO_WITH_STATIC_LIB_TRUE@	include/sfmemcap.c \
@FEAT_OPEN_APPID_TRUE@@SO_WITH_STATIC_LIB_TRUE@	include/sfmemcap.h \
@FEAT_OPEN_APPID_TRUE@@SO_WITH_STATIC_LIB_TRUE@	include/sfghash.c \
@FEAT_OPEN_APPID_TRUE@@SO_WITH_STATIC_LIB_TRUE@	include/sfhashfcn.c \
@FEAT_OPEN_APPID_TRUE@@SO_WITH_STATIC_LIB_TRUE@	include/sflsq.c \
@FEAT_OPEN_APPID_TRUE@@SO_WITH_STATIC_LIB_TRUE@	include/md5.c \
@FEAT_OPEN_APPID_TRUE@@SO_WITH_STATIC_LIB_TRUE@	$(am__append_2)
BUILT_SOURCES = include/snort_bounds.h include/snort_debug.h \
	include/preprocids.h include/profiler.h include/cpuclock.h \
	include/sf_dynamic_common.h include/sf_dynamic_engine.h \
	include/sf_dynamic_define.h include/sf_dynamic_meta.h \
	include/sf_dynamic_preprocessor.h \
	include/sf_dynamic_preproc_lib.c \
	include/sf_dynamic_preproc_lib.h include/sfghash.h \
	include/sfhashfcn.h include/bitop.h include/sf_ip.h \
	include/sf_ip.c include/sf_ipvar.h include/sf_vartable.h \
	include/ipv6_port.h include/sfsnort_dynamic_detection_lib.c \
	include/sfsnort_dynamic_detection_lib.h \
	include/sf_snort_packet.h include/sf_protocols.h \
	include/sf_snort_plugin_api.h include/sf_decompression.h \
	include/sf_decompression_define.h include/pcap_pkthdr32.h \
	include/session_api.h include/stream_api.h \
	include/str_search.h include/sf_types.h include/sfrt.h \
	include/sfrt.c include/sfrt_dir.h include/sfrt_dir.c \
	include/sfrt_flat.h include/sfrt_flat.c \
	include/sfrt_flat_dir.h include/sfrt_flat_dir.c \
	include/sfrt_trie.h include/segment_mem.h \
	include/segment_mem.c include/mempool.h include/mempool.c \
	include/sfmemcap.h include/sfmemcap.c include/sf_sdlist.h \
	include/sf_sdlist_types.h include/sf_sdlist.c \
	include/sfPolicyUserData.c include/sfPolicyUserData.h \
	include/sfPolicy.h include/util_unfold.h include/util_unfold.c \
	include/sf_base64decode.h include/sf_base64decode.c \
	include/sf_email_attach_decode.h \
	include/sf_email_attach_decode.c include/treenodes.h \
	include/signature.h include/plugin_enum.h \
	include/obfuscation.h include/packet_time.h \
	include/rule_option_types.h include/event.h \
	include/Unified2_common.h include/sfcontrol.h \
	include/sidechannel_define.h include/idle_processing.h \
	include/sf_seqnums.h include/perf_indicators.h \
	include/file_api.h include/file_mail_common.h \
	include/mpse_methods.h include/sfdebug.h include/sip_common.h \
	include/cip_common.h include/reload_api.h include/smtp_api.h \
	include/reg_test.h include/reg_test.c ssl_common/ssl.h \
	ssl_common/ssl.c ssl_common/ssl_include.h \
	ssl_common/ssl_config.h ssl_common/ssl_config.c \
	ssl_common/ssl_session.h ssl_common/ssl_inspect.h \
	ssl_common/ssl_inspect.c ssl_common/ssl_ha.h \
	ssl_common/ssl_ha.c libs/sfparser.c libs/sfcommon.h \
	include/memory_stats.h $(am__append_4) $(am__append_5)
sed_ipv6_headers = \
	sed -e "s/->iph->ip_src/->ip4_header->source/" \
	    -e "s/->iph->ip_dst/->ip4_header->destination/" \
	    -e "s/->iph->/->ip4_header->/" \
	    -e "s/->iph$$/->ip4_header/" \
	    -e "s/orig_iph/orig_ipv4h/" \
	    -e "s/ip_verhl/version_headerlength/" \
	    -e "s/ip_tos/type_service/" \
	    -e "s/ip_len/data_length/" \
	    -e "s/ip_id/identifier/" \
	    -e "s/ip_off/offset/" \
	    -e "s/ip_ttl/time_to_live/" \
	    -e "s/ip_proto/proto/" \
	    -e "s/ip_csum/checksum/" \
	    $$dst_header.new > $$dst_header

massage_ipv6_headers = \
	mkdir -p include; \
	mkdir -p build; \
	if test -f $$dst_header; then \
		x=`diff $$src_header $$dst_header.new >> /dev/null`; \
		if test "$$x" != "0"; then \
			echo "Updating " $$dst_header; \
			cp $$src_header $$dst_header.new; \
			$(sed_ipv6_headers); \
		fi \
	else \
		echo "Updating " $$dst_header; \
		cp $$src_header $$dst_header.new; \
		$(sed_ipv6_headers); \
	fi

sed_headers = \
	sed -e "s/Packet /SFSnortPacket /" \
	    -e "s/SnortPktHdr /SFSnortPktHdr /" \
	    -e "s/decode\.h/sf_snort_packet.h/" \
	    -e "/sfportobject\.h/d" \
	    -e "s/PortObject \*/void */g" \
	    $$dst_header.new > $$dst_header

massage_headers = \
	mkdir -p include; \
	mkdir -p build; \
	if test -f $$dst_header; then \
		x=`diff $$src_header $$dst_header.new.new >> /dev/null`; \
		if test "$$x" != "0"; then \
			echo "Updating " $$dst_header; \
			cp $$src_header $$dst_header.new; \
			$(sed_headers); \
		fi \
	else \
		echo "Updating " $$dst_header; \
		cp $$src_header $$dst_header.new; \
		$(sed_headers); \
	fi

sed_debug_header = \
	sed -e "s/DebugMessageFile = /*_dpd.debugMsgFile = /" \
	    -e "s/DebugMessageLine = /*_dpd.debugMsgLine = /" \
	    -e "s/; DebugMessageFunc$$/; _dpd.debugMsg/" \
	    -e "s/; DebugWideMessageFunc$$/; _dpd.debugWideMsg/" \
	    $$dst_header.new > $$dst_header

copy_debug_header = \
	mkdir -p include; \
	mkdir -p build; \
	if test -f $$dst_header; then \
		x=`diff $$src_header $$dst_header.new.new >> /dev/null`; \
		if test "$$x" != "0"; then \
			echo "Updating " $$dst_header; \
			cp $$src_header $$dst_header.new; \
			$(sed_debug_header); \
		fi \
	else \
		echo "Updating " $$dst_header; \
		cp $$src_header $$dst_header.new; \
		$(sed_debug_header); \
	fi

copy_error_message = \
        if test -f $$dst_header; then \
	   sed -e "s/ErrorMessage/_dpd.errMsg/" \
	       -e "s/LogMessage/_dpd.logMsg/" \
	       -e "s/FatalError/_dpd.fatalMsg/" \
	       -e "/util.h/d" \
	       -e "/snort.h/d" \
                        $$dst_header > $$dst_header.new; \
                mv -f $$dst_header.new $$dst_header; \
        fi

copy_no_static_hash = \
        if test -f $$dst_header; then \
                echo "Updating " $$dst_header; \
                sed -e "s/\#ifndef MODULUS_HASH/\#ifdef STATIC_HASH/" \
                        $$dst_header > $$dst_header.new; \
                mv -f $$dst_header.new $$dst_header; \
        fi

replace_policy_globals = \
	if test -f $$dst_header; then \
		sed -e "/SharedObjectAddStarts/d" \
		    -e "/SharedObjectAddEnds/d" \
            -e "/SharedObjectDeleteBegins/,/SharedObjectDeleteEnds/d" \
		    -e "s/getDefaultPolicy()/_dpd.getDefaultPolicy()/" \
		    -e "s/SnortStrnStr/_dpd.SnortStrnStr/" \
		    -e "s/SnortStrncpy/_dpd.SnortStrncpy/" \
		    -e "s/ReloadAdjustRegister/_dpd.reloadAdjustRegister/" \
		    -e "s/session_api/_dpd.sessionAPI/" \
		        $$dst_header > $$dst_header.new; \
		mv -f $$dst_header.new $$dst_header; \
	fi

copy_headers = \
	mkdir -p include; \
	mkdir -p build; \
	if test -f $$dst_header; then \
		x=`diff $$src_header $$dst_header.new.new >> /dev/null`; \
		if test "$$x" != "0"; then \
			echo "Updating " $$dst_header; \
			cp $$src_header $$dst_header; \
		fi \
	else \
		echo "Updating " $$dst_header; \
		cp $$src_header $$dst_header; \
	fi

sed_treenode_header = \
	sed -f $(srcdir)/treenodes.sed $$dst_header.new > $$dst_header

copy_treenode_header = \
	mkdir -p include; \
	mkdir -p build; \
	if test -f $$dst_header; then \
		x=`diff $$src_header $$dst_header.new.new >> /dev/null`; \
		if test "$$x" != "0"; then \
			echo "Updating " $$dst_header; \
			cp $$src_header $$dst_header.new; \
			$(sed_treenode_header); \
		fi \
	else \
		echo "Updating " $$dst_header; \
		cp $$src_header $$dst_header.new; \
		$(sed_treenode_header); \
	fi

@FEAT_FILE_INSPECT_TRUE@FILE_INSPECT_DIR = file
SUBDIRS = . libs ftptelnet pop imap smtp ssh dns ssl dcerpc2 sdf sip \
	reputation gtp modbus dnp3 s7commplus $(FILE_INSPECT_DIR) \
	$(am__append_6)
EXTRA_DIST = \
dynamic_preprocessors.vcxproj \
dynamic_preprocessors.dsp \
sf_dynamic_initialize/sf_dynamic_initialize.vcxproj \
sf_dynamic_initialize/sf_dynamic_initialize.dsp \
treenodes.sed

srcinstdir = $(exec_prefix)/src/snort_dynamicsrc
exported_files = include/sf_dynamic_common.h \
	include/sf_dynamic_define.h include/sf_dynamic_engine.h \
	include/sf_dynamic_meta.h include/sf_dynamic_preprocessor.h \
	include/sf_dynamic_preproc_lib.h \
	include/sf_dynamic_preproc_lib.c include/sf_ip.h \
	include/sf_snort_packet.h include/sf_protocols.h \
	include/sf_snort_plugin_api.h include/sf_decompression.h \
	include/sf_decompression_define.h include/sf_types.h \
	include/sfsnort_dynamic_detection_lib.h \
	include/sfsnort_dynamic_detection_lib.c \
	include/pcap_pkthdr32.h include/str_search.h \
	include/session_api.h include/stream_api.h \
	include/snort_debug.h include/profiler.h include/sfghash.h \
	include/sfhashfcn.h include/sfmemcap.h include/bitop.h \
	include/preprocids.h include/sfPolicyUserData.h \
	include/util_unfold.h include/util_unfold.c \
	include/sf_base64decode.h include/sf_base64decode.c \
	include/sf_email_attach_decode.h \
	include/sf_email_attach_decode.c include/treenodes.h \
	include/signature.h include/plugin_enum.h \
	include/sfPolicyUserData.c include/obfuscation.h \
	include/sidechannel_define.h include/rule_option_types.h \
	include/event.h include/Unified2_common.h include/sfcontrol.h \
	include/idle_processing.h include/sf_seqnums.h \
	include/perf_indicators.h include/file_api.h \
	include/file_mail_common.h include/mpse_methods.h \
	include/sfdebug.h include/sip_common.h include/cip_common.h \
	include/reload_api.h include/reg_test.h include/reg_test.c \
	ssl_common/ssl.h ssl_common/ssl.c ssl_common/ssl_include.h \
	ssl_common/ssl_config.h ssl_common/ssl_config.c \
	ssl_common/ssl_session.h ssl_common/ssl_inspect.h \
	ssl_common/ssl_inspect.c ssl_common/ssl_ha.h \
	ssl_common/ssl_ha.c libs/sfparser.c include/memory_stats.h \
	$(am__append_7) $(am__append_8)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/dynamic-preprocessors/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/dynamic-preprocessors/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-preproclibLTLIBRARIES: $(preproclib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(preproclib_LTLIBRARIES)'; test -n "$(preproclibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(preproclibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(preproclibdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(preproclibdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(preproclibdir)"; \
	}

uninstall-preproclibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(preproclib_LTLIBRARIES)'; test -n "$(preproclibdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(preproclibdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(preproclibdir)/$$f"; \
	done

clean-preproclibLTLIBRARIES:
	-test -z "$(preproclib_LTLIBRARIES)" || rm -f $(preproclib_LTLIBRARIES)
	@list='$(preproclib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libsf_dynamic_preproc.la: $(libsf_dynamic_preproc_la_OBJECTS) $(libsf_dynamic_preproc_la_DEPENDENCIES) $(EXTRA_libsf_dynamic_preproc_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libsf_dynamic_preproc_la_LINK) $(am_libsf_dynamic_preproc_la_rpath) $(libsf_dynamic_preproc_la_OBJECTS) $(libsf_dynamic_preproc_la_LIBADD) $(LIBS)

libsf_dynamic_utils.la: $(libsf_dynamic_utils_la_OBJECTS) $(libsf_dynamic_utils_la_DEPENDENCIES) $(EXTRA_libsf_dynamic_utils_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libsf_dynamic_utils_la_LINK) $(am_libsf_dynamic_utils_la_rpath) $(libsf_dynamic_utils_la_OBJECTS) $(libsf_dynamic_utils_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

libsf_dynamic_preproc_la-ssl.lo: ssl_common/ssl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_preproc_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_preproc_la-ssl.lo `test -f 'ssl_common/ssl.c' || echo '$(srcdir)/'`ssl_common/ssl.c

libsf_dynamic_preproc_la-ssl_config.lo: ssl_common/ssl_config.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_preproc_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_preproc_la-ssl_config.lo `test -f 'ssl_common/ssl_config.c' || echo '$(srcdir)/'`ssl_common/ssl_config.c

libsf_dynamic_preproc_la-ssl_inspect.lo: ssl_common/ssl_inspect.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_preproc_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_preproc_la-ssl_inspect.lo `test -f 'ssl_common/ssl_inspect.c' || echo '$(srcdir)/'`ssl_common/ssl_inspect.c

libsf_dynamic_preproc_la-ssl_ha.lo: ssl_common/ssl_ha.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_preproc_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_preproc_la-ssl_ha.lo `test -f 'ssl_common/ssl_ha.c' || echo '$(srcdir)/'`ssl_common/ssl_ha.c

libsf_dynamic_preproc_la-sf_dynamic_preproc_lib.lo: include/sf_dynamic_preproc_lib.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_preproc_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_preproc_la-sf_dynamic_preproc_lib.lo `test -f 'include/sf_dynamic_preproc_lib.c' || echo '$(srcdir)/'`include/sf_dynamic_preproc_lib.c

libsf_dynamic_preproc_la-sf_ip.lo: include/sf_ip.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_preproc_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_preproc_la-sf_ip.lo `test -f 'include/sf_ip.c' || echo '$(srcdir)/'`include/sf_ip.c

libsf_dynamic_preproc_la-sfrt.lo: include/sfrt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_preproc_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_preproc_la-sfrt.lo `test -f 'include/sfrt.c' || echo '$(srcdir)/'`include/sfrt.c

libsf_dynamic_preproc_la-sfrt_dir.lo: include/sfrt_dir.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_preproc_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_preproc_la-sfrt_dir.lo `test -f 'include/sfrt_dir.c' || echo '$(srcdir)/'`include/sfrt_dir.c

libsf_dynamic_preproc_la-sfrt_flat.lo: include/sfrt_flat.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_preproc_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_preproc_la-sfrt_flat.lo `test -f 'include/sfrt_flat.c' || echo '$(srcdir)/'`include/sfrt_flat.c

libsf_dynamic_preproc_la-sfrt_flat_dir.lo: include/sfrt_flat_dir.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_preproc_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_preproc_la-sfrt_flat_dir.lo `test -f 'include/sfrt_flat_dir.c' || echo '$(srcdir)/'`include/sfrt_flat_dir.c

libsf_dynamic_preproc_la-segment_mem.lo: include/segment_mem.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_preproc_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_preproc_la-segment_mem.lo `test -f 'include/segment_mem.c' || echo '$(srcdir)/'`include/segment_mem.c

libsf_dynamic_preproc_la-mempool.lo: include/mempool.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_preproc_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_preproc_la-mempool.lo `test -f 'include/mempool.c' || echo '$(srcdir)/'`include/mempool.c

libsf_dynamic_preproc_la-sf_sdlist.lo: include/sf_sdlist.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_preproc_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_preproc_la-sf_sdlist.lo `test -f 'include/sf_sdlist.c' || echo '$(srcdir)/'`include/sf_sdlist.c

libsf_dynamic_preproc_la-sfPolicyUserData.lo: include/sfPolicyUserData.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_preproc_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_preproc_la-sfPolicyUserData.lo `test -f 'include/sfPolicyUserData.c' || echo '$(srcdir)/'`include/sfPolicyUserData.c

libsf_dynamic_preproc_la-util_unfold.lo: include/util_unfold.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_preproc_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_preproc_la-util_unfold.lo `test -f 'include/util_unfold.c' || echo '$(srcdir)/'`include/util_unfold.c

libsf_dynamic_preproc_la-sf_base64decode.lo: include/sf_base64decode.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_preproc_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_preproc_la-sf_base64decode.lo `test -f 'include/sf_base64decode.c' || echo '$(srcdir)/'`include/sf_base64decode.c

libsf_dynamic_preproc_la-sf_email_attach_decode.lo: include/sf_email_attach_decode.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_preproc_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_preproc_la-sf_email_attach_decode.lo `test -f 'include/sf_email_attach_decode.c' || echo '$(srcdir)/'`include/sf_email_attach_decode.c

libsf_dynamic_preproc_la-reg_test.lo: include/reg_test.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_preproc_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_preproc_la-reg_test.lo `test -f 'include/reg_test.c' || echo '$(srcdir)/'`include/reg_test.c

libsf_dynamic_preproc_la-sfparser.lo: libs/sfparser.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_preproc_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_preproc_la-sfparser.lo `test -f 'libs/sfparser.c' || echo '$(srcdir)/'`libs/sfparser.c

libsf_dynamic_utils_la-sfmemcap.lo: include/sfmemcap.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_utils_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_utils_la-sfmemcap.lo `test -f 'include/sfmemcap.c' || echo '$(srcdir)/'`include/sfmemcap.c

libsf_dynamic_utils_la-appdata_adjuster.lo: include/appdata_adjuster.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_utils_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_utils_la-appdata_adjuster.lo `test -f 'include/appdata_adjuster.c' || echo '$(srcdir)/'`include/appdata_adjuster.c

libsf_dynamic_utils_la-sfxhash.lo: include/sfxhash.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_utils_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_utils_la-sfxhash.lo `test -f 'include/sfxhash.c' || echo '$(srcdir)/'`include/sfxhash.c

libsf_dynamic_utils_la-sfhashfcn.lo: include/sfhashfcn.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_utils_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_utils_la-sfhashfcn.lo `test -f 'include/sfhashfcn.c' || echo '$(srcdir)/'`include/sfhashfcn.c

libsf_dynamic_utils_la-sfprimetable.lo: include/sfprimetable.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_utils_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_utils_la-sfprimetable.lo `test -f 'include/sfprimetable.c' || echo '$(srcdir)/'`include/sfprimetable.c

libsf_dynamic_utils_la-reg_test.lo: include/reg_test.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_utils_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_utils_la-reg_test.lo `test -f 'include/reg_test.c' || echo '$(srcdir)/'`include/reg_test.c

libsf_dynamic_utils_la-sfghash.lo: include/sfghash.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_utils_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_utils_la-sfghash.lo `test -f 'include/sfghash.c' || echo '$(srcdir)/'`include/sfghash.c

libsf_dynamic_utils_la-sflsq.lo: include/sflsq.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_utils_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_utils_la-sflsq.lo `test -f 'include/sflsq.c' || echo '$(srcdir)/'`include/sflsq.c

libsf_dynamic_utils_la-md5.lo: include/md5.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsf_dynamic_utils_la_CFLAGS) $(CFLAGS) -c -o libsf_dynamic_utils_la-md5.lo `test -f 'include/md5.c' || echo '$(srcdir)/'`include/md5.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-nodist_preprocHEADERS: $(nodist_preproc_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nodist_preproc_HEADERS)'; test -n "$(preprocdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(preprocdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(preprocdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(preprocdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(preprocdir)" || exit $$?; \
	done

uninstall-nodist_preprocHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_preproc_HEADERS)'; test -n "$(preprocdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(preprocdir)'; $(am__uninstall_files_from_dir)
install-preprocHEADERS: $(preproc_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(preproc_HEADERS)'; test -n "$(preprocdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(preprocdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(preprocdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(preprocdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(preprocdir)" || exit $$?; \
	done

uninstall-preprocHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(preproc_HEADERS)'; test -n "$(preprocdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(preprocdir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
@SO_WITH_STATIC_LIB_FALSE@all-local:
all-am: Makefile $(LTLIBRARIES) $(HEADERS) all-local
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(preproclibdir)" "$(DESTDIR)$(preprocdir)" "$(DESTDIR)$(preprocdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-local \
	clean-preproclibLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-data-local install-nodist_preprocHEADERS \
	install-preprocHEADERS install-preproclibLTLIBRARIES

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-local uninstall-nodist_preprocHEADERS \
	uninstall-preprocHEADERS uninstall-preproclibLTLIBRARIES

.MAKE: $(am__recursive_targets) all check install install-am \
	install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am all-local \
	check check-am clean clean-generic clean-libtool clean-local \
	clean-preproclibLTLIBRARIES cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-data-local install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man \
	install-nodist_preprocHEADERS install-pdf install-pdf-am \
	install-preprocHEADERS install-preproclibLTLIBRARIES \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-local \
	uninstall-nodist_preprocHEADERS uninstall-preprocHEADERS \
	uninstall-preproclibLTLIBRARIES

.PRECIOUS: Makefile


@SO_WITH_STATIC_LIB_TRUE@all-local: $(LTLIBRARIES)
@SO_WITH_STATIC_LIB_TRUE@	$(MAKE) DESTDIR=`pwd`/build install-preproclibLTLIBRARIES

# From main src tree
include/snort_debug.h: $(srcdir)/../snort_debug.h
	@src_header=$?; dst_header=$@; $(copy_debug_header)

include/preprocids.h: $(srcdir)/../preprocids.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/profiler.h: $(srcdir)/../profiler.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/cpuclock.h: $(srcdir)/../cpuclock.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/pcap_pkthdr32.h: $(srcdir)/../pcap_pkthdr32.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/snort_bounds.h: $(srcdir)/../snort_bounds.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/ipv6_port.h: $(srcdir)/../ipv6_port.h
	@src_header=$?; dst_header=$@; $(massage_ipv6_headers)

include/sf_types.h: $(srcdir)/../sf_types.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/obfuscation.h: $(srcdir)/../obfuscation.h
	@src_header=$?; dst_header=$@; $(massage_headers)

include/packet_time.h: $(srcdir)/../packet_time.h
	@src_header=$?; dst_header=$@; $(massage_headers)

include/rule_option_types.h: $(srcdir)/../rule_option_types.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/event.h: $(srcdir)/../event.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sidechannel_define.h: $(srcdir)/../side-channel/sidechannel_define.h
	@src_header=$?; dst_header=$@; $(massage_headers)

include/reload_api.h: $(srcdir)/../reload_api.h
	@src_header=$?; dst_header=$@; $(massage_headers)

include/smtp_api.h: $(srcdir)/../smtp_api.h
	@src_header=$?; dst_header=$@; $(massage_headers)

include/reg_test.h: $(srcdir)/../reg_test.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/reg_test.c: $(srcdir)/../reg_test.c
	@src_header=$?; dst_header=$@; $(copy_headers)

# From dynamic-plugins
include/sf_dynamic_common.h: $(srcdir)/../dynamic-plugins/sf_dynamic_common.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sf_dynamic_engine.h: $(srcdir)/../dynamic-plugins/sf_dynamic_engine.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sf_dynamic_define.h: $(srcdir)/../dynamic-plugins/sf_dynamic_define.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sf_dynamic_meta.h: $(srcdir)/../dynamic-plugins/sf_dynamic_meta.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sf_dynamic_preprocessor.h: $(srcdir)/../dynamic-plugins/sf_dynamic_preprocessor.h
	@src_header=$?; dst_header=$@; $(massage_headers)

# From dynamic-plugins/sf_preproc_example
include/sf_dynamic_preproc_lib.c: $(srcdir)/../dynamic-plugins/sf_preproc_example/sf_dynamic_preproc_lib.c
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sf_dynamic_preproc_lib.h: $(srcdir)/../dynamic-plugins/sf_preproc_example/sf_dynamic_preproc_lib.h
	@src_header=$?; dst_header=$@; $(copy_headers)

# From Utils
include/sfghash.h: $(srcdir)/../sfutil/sfghash.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sfhashfcn.h: $(srcdir)/../sfutil/sfhashfcn.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/bitop.h: $(srcdir)/../sfutil/bitop.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sf_ip.h: $(srcdir)/../sfutil/sf_ip.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sf_ip.c: $(srcdir)/../sfutil/sf_ip.c
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sf_ipvar.h: $(srcdir)/../sfutil/sf_ipvar.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sf_vartable.h: $(srcdir)/../sfutil/sf_vartable.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sfrt.h: $(srcdir)/../sfutil/sfrt.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sfrt.c: $(srcdir)/../sfutil/sfrt.c
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sfrt_dir.h: $(srcdir)/../sfutil/sfrt_dir.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sfrt_dir.c: $(srcdir)/../sfutil/sfrt_dir.c
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sfrt_flat.h: $(srcdir)/../sfutil/sfrt_flat.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sfrt_flat.c: $(srcdir)/../sfutil/sfrt_flat.c
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sfrt_flat_dir.h: $(srcdir)/../sfutil/sfrt_flat_dir.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sfrt_flat_dir.c: $(srcdir)/../sfutil/sfrt_flat_dir.c
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sfrt_trie.h: $(srcdir)/../sfutil/sfrt_trie.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/segment_mem.c: $(srcdir)/../sfutil/segment_mem.c
	@src_header=$?; dst_header=$@; $(copy_headers)

include/segment_mem.h: $(srcdir)/../sfutil/segment_mem.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/mempool.h: $(srcdir)/../mempool.h
	@src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals)

include/mempool.c: $(srcdir)/../mempool.c
	@src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals)

include/sfmemcap.h: $(srcdir)/../sfutil/sfmemcap.h
	    @src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals)

include/sfmemcap.c: $(srcdir)/../sfutil/sfmemcap.c
	    @src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals)

include/sf_sdlist.h: $(srcdir)/../sf_sdlist.h
	@src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals)

include/sf_sdlist_types.h: $(srcdir)/../sf_sdlist_types.h
	@src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals)

include/sf_sdlist.c: $(srcdir)/../sf_sdlist.c
	@src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals)

include/sfPolicyUserData.c: $(srcdir)/../sfutil/sfPolicyUserData.c
	@src_header=$?; dst_header=$@; $(copy_headers); $(replace_policy_globals)

include/sfPolicyUserData.h: $(srcdir)/../sfutil/sfPolicyUserData.h
	@src_header=$?; dst_header=$@; $(copy_headers); $(replace_policy_globals)

include/sfPolicy.h: $(srcdir)/../sfutil/sfPolicy.h
	@src_header=$?; dst_header=$@; $(copy_headers); $(replace_policy_globals)

include/util_unfold.h: $(srcdir)/../sfutil/util_unfold.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/util_unfold.c: $(srcdir)/../sfutil/util_unfold.c
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sf_base64decode.h: $(srcdir)/../sfutil/sf_base64decode.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sf_base64decode.c: $(srcdir)/../sfutil/sf_base64decode.c
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sf_email_attach_decode.h: $(srcdir)/../sfutil/sf_email_attach_decode.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sf_email_attach_decode.c: $(srcdir)/../sfutil/sf_email_attach_decode.c
	@src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals)

include/Unified2_common.h: $(srcdir)/../sfutil/Unified2_common.h
	@src_header=$?; dst_header=$@; $(copy_headers)

# From dynamic-plugins/sf_engine/examples
include/sfsnort_dynamic_detection_lib.c: $(srcdir)/../dynamic-plugins/sf_engine/examples/sfsnort_dynamic_detection_lib.c
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sfsnort_dynamic_detection_lib.h: $(srcdir)/../dynamic-plugins/sf_engine/examples/sfsnort_dynamic_detection_lib.h
	@src_header=$?; dst_header=$@; $(copy_headers)

# From dynamic-plugins/sf_engine
include/sf_snort_packet.h: $(srcdir)/../dynamic-plugins/sf_engine/sf_snort_packet.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sf_protocols.h: $(srcdir)/../sf_protocols.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sf_snort_plugin_api.h: $(srcdir)/../dynamic-plugins/sf_engine/sf_snort_plugin_api.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sf_decompression.h: $(srcdir)/../dynamic-plugins/sf_engine/sf_decompression.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sf_decompression_define.h: $(srcdir)/../dynamic-plugins/sf_decompression_define.h
	@src_header=$?; dst_header=$@; $(copy_headers)

# Session API/String Searching, massage it to use SFSnortPacket
include/session_api.h: $(srcdir)/../preprocessors/session_api.h
	@src_header=$?; dst_header=$@; $(massage_headers)

# Stream API/String Searching, massage it to use SFSnortPacket
include/stream_api.h: $(srcdir)/../preprocessors/stream_api.h
	@src_header=$?; dst_header=$@; $(massage_headers)

include/str_search.h: $(srcdir)/../preprocessors/str_search.h
	@src_header=$?; dst_header=$@; $(massage_headers)

include/treenodes.h: $(srcdir)/../treenodes.h
	@src_header=$?; dst_header=$@; $(copy_treenode_header)

include/signature.h: $(srcdir)/../signature.h
	@src_header=$?; dst_header=$@; $(copy_treenode_header)

include/plugin_enum.h: $(srcdir)/../plugin_enum.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sfcontrol.h: $(top_srcdir)/src/control/sfcontrol.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/idle_processing.h: $(top_srcdir)/src/idle_processing.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sf_seqnums.h: $(top_srcdir)/src/sfutil/sf_seqnums.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/perf_indicators.h: $(srcdir)/../preprocessors/perf_indicators.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/file_api.h: $(top_srcdir)/src/file-process/file_api.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/file_mail_common.h: $(top_srcdir)/src/file-process/file_mail_common.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sfdebug.h: $(srcdir)/../sfutil/sfdebug.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/mpse_methods.h: $(srcdir)/../sfutil/mpse_methods.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/sip_common.h: $(srcdir)/../preprocessors/sip_common.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/cip_common.h: $(srcdir)/../preprocessors/cip_common.h
	@src_header=$?; dst_header=$@; $(copy_headers)

include/appId.h: $(srcdir)/appid/appId.h
	@src_header=$?; dst_header=$@; $(copy_headers)

@FEAT_OPEN_APPID_TRUE@include/appIdApi.h: $(srcdir)/../appIdApi.h
@FEAT_OPEN_APPID_TRUE@	@src_header=$?; dst_header=$@; $(copy_headers)

@FEAT_OPEN_APPID_TRUE@include/thirdparty_appid_types.h: $(srcdir)/appid/thirdparty_appid_types.h
@FEAT_OPEN_APPID_TRUE@	@src_header=$?; dst_header=$@; $(copy_headers)

@FEAT_OPEN_APPID_TRUE@include/thirdparty_appid_api.h: $(srcdir)/appid/thirdparty_appid_api.h
@FEAT_OPEN_APPID_TRUE@	@src_header=$?; dst_header=$@; $(copy_headers)

@FEAT_OPEN_APPID_TRUE@include/dns_defs.h: $(srcdir)/appid/dns_defs.h
@FEAT_OPEN_APPID_TRUE@	@src_header=$?; dst_header=$@; $(copy_headers)

@FEAT_OPEN_APPID_TRUE@include/md5.c: $(srcdir)/../sfutil/md5.c
@FEAT_OPEN_APPID_TRUE@	@src_header=$?; dst_header=$@; $(copy_headers)

@FEAT_OPEN_APPID_TRUE@include/md5.h: $(srcdir)/../sfutil/md5.h
@FEAT_OPEN_APPID_TRUE@	@src_header=$?; dst_header=$@; $(copy_headers)

@FEAT_OPEN_APPID_TRUE@include/sfprimetable.h: $(srcdir)/../sfutil/sfprimetable.h
@FEAT_OPEN_APPID_TRUE@	@src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals)

@FEAT_OPEN_APPID_TRUE@include/sfprimetable.c: $(srcdir)/../sfutil/sfprimetable.c
@FEAT_OPEN_APPID_TRUE@	@src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals)

@FEAT_OPEN_APPID_TRUE@include/sfxhash.h: $(srcdir)/../sfutil/sfxhash.h
@FEAT_OPEN_APPID_TRUE@	@src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals)

@FEAT_OPEN_APPID_TRUE@include/sfxhash.c: $(srcdir)/../sfutil/sfxhash.c
@FEAT_OPEN_APPID_TRUE@	@src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals)

@FEAT_OPEN_APPID_TRUE@include/sfghash.c: $(srcdir)/../sfutil/sfghash.c
@FEAT_OPEN_APPID_TRUE@	@src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals)

@FEAT_OPEN_APPID_TRUE@include/sfhashfcn.c: $(srcdir)/../sfutil/sfhashfcn.c
@FEAT_OPEN_APPID_TRUE@	@src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals); $(copy_no_static_hash)

@FEAT_OPEN_APPID_TRUE@include/sflsq.h: $(srcdir)/../sfutil/sflsq.h
@FEAT_OPEN_APPID_TRUE@	@src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals)

@FEAT_OPEN_APPID_TRUE@include/sflsq.c: $(srcdir)/../sfutil/sflsq.c
@FEAT_OPEN_APPID_TRUE@	@src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals)
@BUILD_SNORT_RELOAD_TRUE@@FEAT_OPEN_APPID_FALSE@include/sfxhash.h: $(srcdir)/../sfutil/sfxhash.h
@BUILD_SNORT_RELOAD_TRUE@@FEAT_OPEN_APPID_FALSE@	@src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals)

@BUILD_SNORT_RELOAD_TRUE@@FEAT_OPEN_APPID_FALSE@include/sfxhash.c: $(srcdir)/../sfutil/sfxhash.c
@BUILD_SNORT_RELOAD_TRUE@@FEAT_OPEN_APPID_FALSE@	@src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals)

@BUILD_SNORT_RELOAD_TRUE@@FEAT_OPEN_APPID_FALSE@include/sfprimetable.h: $(srcdir)/../sfutil/sfprimetable.h
@BUILD_SNORT_RELOAD_TRUE@@FEAT_OPEN_APPID_FALSE@	@src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals)

@BUILD_SNORT_RELOAD_TRUE@@FEAT_OPEN_APPID_FALSE@include/sfprimetable.c: $(srcdir)/../sfutil/sfprimetable.c
@BUILD_SNORT_RELOAD_TRUE@@FEAT_OPEN_APPID_FALSE@	@src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals)

@BUILD_SNORT_RELOAD_TRUE@@FEAT_OPEN_APPID_FALSE@include/sfhashfcn.c: $(srcdir)/../sfutil/sfhashfcn.c
@BUILD_SNORT_RELOAD_TRUE@@FEAT_OPEN_APPID_FALSE@	@src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals); $(copy_no_static_hash)

@BUILD_SNORT_RELOAD_TRUE@include/appdata_adjuster.c: $(srcdir)/../reload-adjust/appdata_adjuster.c
@BUILD_SNORT_RELOAD_TRUE@	@src_header=$?; dst_header=$@; $(copy_headers); $(copy_error_message); $(replace_policy_globals)

@BUILD_SNORT_RELOAD_TRUE@include/appdata_adjuster.h: $(srcdir)/../reload-adjust/appdata_adjuster.h
@BUILD_SNORT_RELOAD_TRUE@	@src_header=$?; dst_header=$@; $(copy_headers)

include/memory_stats.h: $(srcdir)/../memory_stats.h
	@src_header=$?; dst_header=$@; $(copy_headers)

clean-local:
	rm -rf include build

install-data-local:
	@for f in $(exported_files); do \
		truefile=`echo $$f | sed -e "s/.*\///"`; \
		$(mkinstalldirs) $(DESTDIR)$(srcinstdir); \
		if test -f $(srcdir)/$$f; then p=$(srcdir)/$$f; else p=$$f; fi; \
		$(INSTALL_DATA) $$p $(DESTDIR)$(srcinstdir)/$$truefile; \
	done

uninstall-local:
	@for f in $(exported_files); do \
		truefile=`echo $$f | sed -e "s/.*\///"`; \
		$(mkinstalldirs) $(DESTDIR)$(srcinstdir); \
		rm -f $(DESTDIR)$(srcinstdir)/$$truefile; \
	done

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
